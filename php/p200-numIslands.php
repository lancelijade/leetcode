<?php

class Solution {

    /**
     * @param String[][] $grid
     * @return Integer
     */
    function numIslands($grid) {
        
        $m = count($grid);
        $n = count($grid[0]);

        $q = [];
        $vt = [];

        $r = 0;

        for ($i=0; $i<$m; $i++) {
            for ($j=0; $j<$n; $j++) {

                if (!isset($vt[$i][$j]) and $grid[$i][$j]==1) {
                    $q[] = [$i, $j];
                    $r++;
                }

                while ($q) {

                    //print_r($q);
                    $c = array_shift($q);
                    $vt[$c[0]][$c[1]] = 1;
                    //$this->show($vt, $m, $n);
                    if ($c[0]-1>=0 and !isset($vt[$c[0]-1][$c[1]]) and $grid[$c[0]-1][$c[1]]==1) {$vt[$c[0]-1][$c[1]] = 1; $q[] = [$c[0]-1, $c[1]];}
                    if ($c[1]-1>=0 and !isset($vt[$c[0]][$c[1]-1]) and $grid[$c[0]][$c[1]-1]==1) {$vt[$c[0]][$c[1]-1] = 1; $q[] = [$c[0], $c[1]-1];}
                    if ($c[0]+1<$m and !isset($vt[$c[0]+1][$c[1]]) and $grid[$c[0]+1][$c[1]]==1) {$vt[$c[0]+1][$c[1]] = 1; $q[] = [$c[0]+1, $c[1]];}
                    if ($c[1]+1<$n and !isset($vt[$c[0]][$c[1]+1]) and $grid[$c[0]][$c[1]+1]==1) {$vt[$c[0]][$c[1]+1] = 1; $q[] = [$c[0], $c[1]+1];}
                }                
            }
        }
        return $r;

    }

    function show($g, $m, $n) {
        for ($i=0; $i<$m; $i++) {
            for ($j=0; $j<$n; $j++) {
                echo $g[$i][$j] ?? 0;
            }
            echo PHP_EOL;
        }
        echo PHP_EOL;
    }
}

$grid = [
    ["1","1","1","1","0"],
    ["1","1","0","1","0"],
    ["1","1","0","0","0"],
    ["0","0","0","0","0"]
];

$grid = [
    ["1","1","0","0","0"],
    ["1","1","0","0","0"],
    ["0","0","1","0","0"],
    ["0","0","0","1","1"]
];

$grid = [
    ["1","1","1","1","1","0","1","1","1","1"],
    ["1","0","1","0","1","1","1","1","1","1"],
    ["0","1","1","1","0","1","1","1","1","1"],
    ["1","1","0","1","1","0","0","0","0","1"],
    ["1","0","1","0","1","0","0","1","0","1"],
    ["1","0","0","1","1","1","0","1","0","0"],
    ["0","0","1","0","0","1","1","1","1","0"],
    ["1","0","1","1","1","0","0","1","1","1"],
    ["1","1","1","1","1","1","1","1","0","1"],
    ["1","0","1","1","1","1","1","1","1","0"]];

$grid = [
    ["1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","0","1","0","1","1"],
    ["0","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","0"],
    ["1","0","1","1","1","0","0","1","1","0","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","0","1","1","1","1","1","1","0","1","1","1","0","1","1","1","0","1","1","1"],
    ["0","1","1","1","1","1","1","1","1","1","1","1","0","1","1","0","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["0","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","0","1","1","1","1","1","1","1","0","1","1","1","1","1","1"],
    ["1","0","1","1","1","1","1","0","1","1","1","0","1","1","1","1","0","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","0"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","0"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"]];

$grid = [
    [1,0,0,1],
    [0,1,1,0],
    [0,1,1,1],
    [1,0,1,1]];    
$so = new Solution();
$r = $so->numIslands($grid);
print_r($r);